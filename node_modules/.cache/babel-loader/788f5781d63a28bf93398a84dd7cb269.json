{"ast":null,"code":"const AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"names":["AuthReducer","state","action","type","user","isFetching","error","payload"],"sources":["/home/thanhvo/Desktop/Intern Stdio.hue/demo_socket/client/src/context/AuthReducer.js"],"sourcesContent":["const AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false,\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false,\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default AuthReducer;\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,aAAL;MACE,OAAO;QACLC,IAAI,EAAE,IADD;QAELC,UAAU,EAAE,IAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,eAAL;MACE,OAAO;QACLF,IAAI,EAAEF,MAAM,CAACK,OADR;QAELF,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAKF,KAAK,eAAL;MACE,OAAO;QACLF,IAAI,EAAE,IADD;QAELC,UAAU,EAAE,KAFP;QAGLC,KAAK,EAAE;MAHF,CAAP;;IAMF;MACE,OAAOL,KAAP;EArBJ;AAuBD,CAxBD;;KAAMD,W;AA0BN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}