{"ast":null,"code":"var _jsxFileName = \"/home/thanhvo/Desktop/Intern Stdio.hue/demo_socket/client/src/component/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport { InfoBar } from '../InfoBar/InfoBar';\nimport { Input } from '../Input/Input';\nimport { Messages } from '../Messages/Messages';\nimport { TextContainer } from '../TextContainer/TextContainer';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket = io('localhost:3001');\nexport const Chat = _ref => {\n  _s();\n\n  let {\n    location\n  } = _ref;\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'http://localhost:3001/';\n  useEffect(() => {\n    socket.on('user-chat', _ref2 => {\n      let {\n        name,\n        message\n      } = _ref2;\n      setMessages(prev => [...prev, {\n        name,\n        message\n      }]);\n    });\n  }, socket);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    console.log('go to chat');\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(msgs => [...msgs, message]);\n    });\n    socket.on(\"roomData\", _ref3 => {\n      let {\n        users\n      } = _ref3;\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"mBr+RUv3ag47s+tLp//sZeWdNzY=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","queryString","io","InfoBar","Input","Messages","TextContainer","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","on","prev","parse","search","console","log","emit","error","alert","msgs","sendMessage","event","preventDefault"],"sources":["/home/thanhvo/Desktop/Intern Stdio.hue/demo_socket/client/src/component/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\n\n\nimport {InfoBar} from '../InfoBar/InfoBar';\nimport {Input} from '../Input/Input';\nimport {Messages} from '../Messages/Messages';\nimport {TextContainer} from '../TextContainer/TextContainer'\n\nimport './Chat.css';\n\nlet socket = io('localhost:3001');\n\nexport const Chat = ({ location }) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'http://localhost:3001/';\n\n\n  useEffect(()=>{\n    socket.on('user-chat', ({name,message})=>{\n      setMessages(prev=>[...prev, {name,message}])\n    })\n  }, socket)\n  useEffect(() => {\n    const { name, room } = queryString.parse(location.search);\n    console.log('go to chat');\n    socket = io(ENDPOINT);\n\n    setRoom(room);\n    setName(name)\n\n    socket.emit('join', { name, room }, (error) => {\n      if(error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  \n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(msgs => [ ...msgs, message ]);\n    });\n    \n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });\n}, []);\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    if(message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  }\n\n\n  return (\n    <div className=\"outerContainer\">\n    <TextContainer users={users} />\n      <div className=\"container\">\n          <InfoBar room={room} />\n          <Messages messages={messages} name={name} />\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}