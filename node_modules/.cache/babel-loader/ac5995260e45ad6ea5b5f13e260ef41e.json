{"ast":null,"code":"var _jsxFileName = \"/home/thanhvo/Desktop/Intern Stdio.hue/demo_socket/client/src/pages/messenger/Messenger.jsx\";\nimport \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\"; // import Conversation from \"../../components/conversations/Conversation\";\n\nimport Message from \"../../components/message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\"; // import { useContext, useEffect, useRef, useState } from \"react\";\n// import { AuthContext } from \"../../context/AuthContext\";\n// import axios from \"axios\";\n// import { io } from \"socket.io-client\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messenger() {\n  // const [conversations, setConversations] = useState([]);\n  // const [currentChat, setCurrentChat] = useState(null);\n  // const [messages, setMessages] = useState([]);\n  // const [newMessage, setNewMessage] = useState(\"\");\n  // const [arrivalMessage, setArrivalMessage] = useState(null);\n  // const [onlineUsers, setOnlineUsers] = useState([]);\n  // const socket = useRef();\n  // const { user } = useContext(AuthContext);\n  // const scrollRef = useRef();\n  // useEffect(() => {\n  //   socket.current = io(\"ws://localhost:8900\");\n  //   socket.current.on(\"getMessage\", (data) => {\n  //     setArrivalMessage({\n  //       sender: data.senderId,\n  //       text: data.text,\n  //       createdAt: Date.now(),\n  //     });\n  //   });\n  // }, []);\n  // useEffect(() => {\n  //   arrivalMessage &&\n  //     currentChat?.members.includes(arrivalMessage.sender) &&\n  //     setMessages((prev) => [...prev, arrivalMessage]);\n  // }, [arrivalMessage, currentChat]);\n  // useEffect(() => {\n  //   socket.current.emit(\"addUser\", user._id);\n  //   socket.current.on(\"getUsers\", (users) => {\n  //     setOnlineUsers(\n  //       user.followings.filter((f) => users.some((u) => u.userId === f))\n  //     );\n  //   });\n  // }, [user]);\n  // useEffect(() => {\n  //   const getConversations = async () => {\n  //     try {\n  //       const res = await axios.get(\"/conversations/\" + user._id);\n  //       setConversations(res.data);\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  //   getConversations();\n  // }, [user._id]);\n  // useEffect(() => {\n  //   const getMessages = async () => {\n  //     try {\n  //       const res = await axios.get(\"/messages/\" + currentChat?._id);\n  //       setMessages(res.data);\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  //   getMessages();\n  // }, [currentChat]);\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   const message = {\n  //     sender: user._id,\n  //     text: newMessage,\n  //     conversationId: currentChat._id,\n  //   };\n  //   const receiverId = currentChat.members.find(\n  //     (member) => member !== user._id\n  //   );\n  //   socket.current.emit(\"sendMessage\", {\n  //     senderId: user._id,\n  //     receiverId,\n  //     text: newMessage,\n  //   });\n  //   try {\n  //     const res = await axios.post(\"/messages\", message);\n  //     setMessages([...messages, res.data]);\n  //     setNewMessage(\"\");\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n  // useEffect(() => {\n  //   scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  // }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write something...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), \") : (\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noConversationText\",\n            children: \"Open a conversation to start a chat.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"names":["Topbar","Message","ChatOnline","Messenger"],"sources":["/home/thanhvo/Desktop/Intern Stdio.hue/demo_socket/client/src/pages/messenger/Messenger.jsx"],"sourcesContent":["import \"./messenger.css\";\nimport Topbar from \"../../components/topbar/Topbar\";\n// import Conversation from \"../../components/conversations/Conversation\";\nimport Message from \"../../components/message/Message\";\nimport ChatOnline from \"../../components/chatOnline/ChatOnline\";\n// import { useContext, useEffect, useRef, useState } from \"react\";\n// import { AuthContext } from \"../../context/AuthContext\";\n// import axios from \"axios\";\n// import { io } from \"socket.io-client\";\n\nexport default function Messenger() {\n  // const [conversations, setConversations] = useState([]);\n  // const [currentChat, setCurrentChat] = useState(null);\n  // const [messages, setMessages] = useState([]);\n  // const [newMessage, setNewMessage] = useState(\"\");\n  // const [arrivalMessage, setArrivalMessage] = useState(null);\n  // const [onlineUsers, setOnlineUsers] = useState([]);\n  // const socket = useRef();\n  // const { user } = useContext(AuthContext);\n  // const scrollRef = useRef();\n\n  // useEffect(() => {\n  //   socket.current = io(\"ws://localhost:8900\");\n  //   socket.current.on(\"getMessage\", (data) => {\n  //     setArrivalMessage({\n  //       sender: data.senderId,\n  //       text: data.text,\n  //       createdAt: Date.now(),\n  //     });\n  //   });\n  // }, []);\n\n  // useEffect(() => {\n  //   arrivalMessage &&\n  //     currentChat?.members.includes(arrivalMessage.sender) &&\n  //     setMessages((prev) => [...prev, arrivalMessage]);\n  // }, [arrivalMessage, currentChat]);\n\n  // useEffect(() => {\n  //   socket.current.emit(\"addUser\", user._id);\n  //   socket.current.on(\"getUsers\", (users) => {\n  //     setOnlineUsers(\n  //       user.followings.filter((f) => users.some((u) => u.userId === f))\n  //     );\n  //   });\n  // }, [user]);\n\n  // useEffect(() => {\n  //   const getConversations = async () => {\n  //     try {\n  //       const res = await axios.get(\"/conversations/\" + user._id);\n  //       setConversations(res.data);\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  //   getConversations();\n  // }, [user._id]);\n\n  // useEffect(() => {\n  //   const getMessages = async () => {\n  //     try {\n  //       const res = await axios.get(\"/messages/\" + currentChat?._id);\n  //       setMessages(res.data);\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   };\n  //   getMessages();\n  // }, [currentChat]);\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   const message = {\n  //     sender: user._id,\n  //     text: newMessage,\n  //     conversationId: currentChat._id,\n  //   };\n\n  //   const receiverId = currentChat.members.find(\n  //     (member) => member !== user._id\n  //   );\n\n  //   socket.current.emit(\"sendMessage\", {\n  //     senderId: user._id,\n  //     receiverId,\n  //     text: newMessage,\n  //   });\n\n  //   try {\n  //     const res = await axios.post(\"/messages\", message);\n  //     setMessages([...messages, res.data]);\n  //     setNewMessage(\"\");\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  // }, [messages]);\n\n  return (\n    <>\n      <Topbar />\n      <div className=\"messenger\">\n        <div className=\"chatMenu\">\n          <div className=\"chatMenuWrapper\">\n            <input placeholder=\"Search for friends\" className=\"chatMenuInput\" />\n            \n              <div>\n                \n              </div>\n            \n          </div>\n        </div>\n        <div className=\"chatBox\">\n          <div className=\"chatBoxWrapper\">\n            \n              <>\n                <div className=\"chatBoxTop\">\n            \n                </div>\n                <div className=\"chatBoxBottom\">\n                  <textarea\n                    className=\"chatMessageInput\"\n                    placeholder=\"write something...\"\n            \n            \n                  ></textarea>\n                  <button className=\"chatSubmitButton\" >\n                    Send\n                  </button>\n                </div>\n              </>\n            ) : (\n              <span className=\"noConversationText\">\n                Open a conversation to start a chat.\n              </span>\n            )\n          </div>\n        </div>\n        <div className=\"chatOnline\">\n          <div className=\"chatOnlineWrapper\">\n            <ChatOnline\n              \n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":";AAAA,OAAO,iBAAP;AACA,OAAOA,MAAP,MAAmB,gCAAnB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,UAAP,MAAuB,wCAAvB,C,CACA;AACA;AACA;AACA;;;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAClC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE;UAAK,SAAS,EAAC,iBAAf;UAAA,wBACE;YAAO,WAAW,EAAC,oBAAnB;YAAwC,SAAS,EAAC;UAAlD;YAAA;YAAA;YAAA;UAAA,QADF,eAGI;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAWE;QAAK,SAAS,EAAC,SAAf;QAAA,uBACE;UAAK,SAAS,EAAC,gBAAf;UAAA,wBAEI;YAAA,wBACE;cAAK,SAAS,EAAC;YAAf;cAAA;cAAA;cAAA;YAAA,QADF,eAIE;cAAK,SAAS,EAAC,eAAf;cAAA,wBACE;gBACE,SAAS,EAAC,kBADZ;gBAEE,WAAW,EAAC;cAFd;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAOE;gBAAQ,SAAS,EAAC,kBAAlB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAPF;YAAA;cAAA;cAAA;cAAA;YAAA,QAJF;UAAA,gBAFJ,wBAmBI;YAAM,SAAS,EAAC,oBAAhB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAnBJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAXF,eAqCE;QAAK,SAAS,EAAC,YAAf;QAAA,uBACE;UAAK,SAAS,EAAC,mBAAf;UAAA,uBACE,QAAC,UAAD;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QArCF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAkDD;KA9IuBA,S"},"metadata":{},"sourceType":"module"}