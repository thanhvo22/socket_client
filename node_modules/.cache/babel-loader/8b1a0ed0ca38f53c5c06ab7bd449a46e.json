{"ast":null,"code":"var _jsxFileName = \"/home/thanhvo/Desktop/Intern Stdio.hue/demo_socket/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst host = \"http://localhost:3000\";\n\nfunction App() {\n  _s();\n\n  const [mess, setMess] = useState([]);\n  const [message, setMessage] = useState('');\n  const [id, setId] = useState();\n  const socketRef = useRef();\n  const messagesEnd = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient.connect(host);\n    socketRef.current.on('getId', data => {\n      setId(data);\n    });\n    socketRef.current.on('sendDataServer', dataGot => {\n      setMess(oldMsgs => [...oldMsgs, dataGot.data]);\n      scrollToBottom();\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const sendMessage = () => {\n    if (message !== null) {\n      const msg = {\n        content: message,\n        id: id\n      };\n      socketRef.current.emit('sendDataClient', msg);\n      setMessage('');\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEnd.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const renderMess = mess.map((m, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${m.id === id ? 'your-message' : 'other-people'} chat-item`,\n    children: m.content\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this));\n\n  const handleChange = e => {\n    setMessage(e.target.value);\n  };\n\n  const onEnterPress = e => {\n    if (e.keyCode == 13 && e.shiftKey == false) {\n      sendMessage();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"box-chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"box-chat_message\",\n      children: [renderMess, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          float: \"left\",\n          clear: \"both\"\n        },\n        ref: messagesEnd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"send-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onKeyDown: onEnterPress,\n        onChange: handleChange,\n        placeholder: \"Nh\\u1EADp tin nh\\u1EAFn ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3voxHKBUhCjwMqA4QmkZ5D62qUk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","socketIOClient","host","App","mess","setMess","message","setMessage","id","setId","socketRef","messagesEnd","current","connect","on","data","dataGot","oldMsgs","scrollToBottom","disconnect","sendMessage","msg","content","emit","scrollIntoView","behavior","renderMess","map","m","index","handleChange","e","target","value","onEnterPress","keyCode","shiftKey","float","clear"],"sources":["/home/thanhvo/Desktop/Intern Stdio.hue/demo_socket/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport './App.css'\nconst host = \"http://localhost:3000\";\n\nfunction App() {\n  const [mess, setMess] = useState([]);\n  const [message, setMessage] = useState('');\n  const [id, setId] = useState();\n\n  const socketRef = useRef();\n  const messagesEnd = useRef();\n\n  useEffect(() => {\n    socketRef.current = socketIOClient.connect(host)\n  \n    socketRef.current.on('getId', data => {\n      setId(data)\n    })\n\n    socketRef.current.on('sendDataServer', dataGot => {\n      setMess(oldMsgs => [...oldMsgs, dataGot.data])\n      scrollToBottom()\n    })\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n\n  const sendMessage = () => {\n    if(message !== null) {\n      const msg = {\n        content: message, \n        id: id\n      }\n      socketRef.current.emit('sendDataClient', msg)\n      setMessage('')\n    }\n  }\n\n  const scrollToBottom = () => {\n    messagesEnd.current.scrollIntoView({ behavior: \"smooth\" });\n  }\n  \n\n  const renderMess =  mess.map((m, index) => \n        <div key={index} className={`${m.id === id ? 'your-message' : 'other-people'} chat-item`}>\n          {m.content}\n        </div>\n      )\n\n  const handleChange = (e) => {\n    setMessage(e.target.value)\n  }\n\n  const onEnterPress = (e) => {\n    if(e.keyCode == 13 && e.shiftKey == false) {\n      sendMessage()\n    }\n  }\n\n  return (\n    <div class=\"box-chat\">\n      <div class=\"box-chat_message\">\n      {renderMess}\n      <div style={{ float:\"left\", clear: \"both\" }}\n             ref={messagesEnd}>\n        </div>\n      </div>\n\n      <div class=\"send-box\">\n          <textarea \n            value={message}  \n            onKeyDown={onEnterPress}\n            onChange={handleChange} \n            placeholder=\"Nhập tin nhắn ...\" \n          />\n          <button onClick={sendMessage}>\n            Send\n          </button>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}